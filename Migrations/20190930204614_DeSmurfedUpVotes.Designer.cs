// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using sdg_overflow;

namespace sdgreacttemplate.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190930204614_DeSmurfedUpVotes")]
    partial class DeSmurfedUpVotes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SDG_overflow.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnswerDescription");

                    b.Property<DateTime>("DateAdded");

                    b.Property<int>("DownVotes");

                    b.Property<int>("QuestionId");

                    b.Property<int>("UpVotes");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("SDG_overflow.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("DownVotes");

                    b.Property<string>("QuestionDescription");

                    b.Property<string>("QuestionTitle");

                    b.Property<int>("UpVotes");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("SDG_overflow.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateSignedUp");

                    b.Property<string>("Email");

                    b.Property<string>("HashedPassword");

                    b.Property<DateTime>("LastLoggedInAt");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SDG_overflow.Models.Answer", b =>
                {
                    b.HasOne("SDG_overflow.Models.Question", "Question")
                        .WithMany("Answer")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SDG_overflow.Models.User", "User")
                        .WithMany("Answer")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SDG_overflow.Models.Question", b =>
                {
                    b.HasOne("SDG_overflow.Models.User", "User")
                        .WithMany("Question")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
